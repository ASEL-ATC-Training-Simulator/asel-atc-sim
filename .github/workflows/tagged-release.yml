name: Tagged Release

on:
  push:
    tags: [ "v*" ]

jobs:
  build:
    # Arch Matrix
    strategy:
      fail-fast: false
      matrix:
        #arch: [x64, x86, arm, arm64]
        arch: [x64, x86]
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            short-os: osx
            rust-os: apple-darwin
          - os: windows-latest
            short-os: win
            rust-os: pc-windows-msvc
          - os: ubuntu-latest
            short-os: linux
            rust-os: unknown-linux-gnu
          - arch: x86
            rust-arch: i686
          - arch: x64
            rust-arch: x86_64
        exclude:
          #- os: windows-latest
          #  arch: arm
          #- os: windows-latest
          #  arch: arm64
          - os: ubuntu-latest
            arch: x86
          - os: macos-latest
            arch: x86
          #- os: macos-latest
          #  arch: arm
          #- os: macos-latest
          #  arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: npm install
        run: npm install
      - name: Build and Package
        run: npm run package -- -t ${{ matrix.rust-arch }}-${{ matrix.rust-os }}
      - name: Copy Installers
        shell: pwsh
        run: |
          New-Item -ItemType Directory '${{ github.workspace }}/installers'
          Get-ChildItem '${{ github.workspace }}/src-tauri/target/release/bundle' -Recurse -Include *.exe,*.msi,*.deb,*.AppImage,*.dmg,*.app | Copy-Item -Destination '${{ github.workspace }}/installers'
      - name: Archive Installers
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: installers
          path: |
            ${{ github.workspace }}/installers/*

  create-github-release:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')}}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Installers
        uses: actions/download-artifact@v3
        with:
          name: installers
          path: ${{ github.workspace }}/installers
      - uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{ github.workspace}}/installers/*